{
  "name": "gulp-iconfont-css",
  "version": "0.0.9",
  "description": "Generate (S)CSS file for icon font created with Gulp",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/backflip/gulp-iconfont-css"
  },
  "author": {
    "name": "Thomas Jaggi, Nicolas Froidure"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "main": "./index.js",
  "keywords": [
    "gulpplugin",
    "gulp",
    "icon",
    "font",
    "scss",
    "css"
  ],
  "dependencies": {
    "gulp-util": "~2.2.0",
    "consolidate": "~0.10.0",
    "lodash": "~2.4.1"
  },
  "devDependencies": {
    "mocha": "*",
    "event-stream": "~3.1.0",
    "gulp": "~3.5.2"
  },
  "readme": "# gulp-iconfont-css\n> Generate (S)CSS file for icon font created with [Gulp](http://gulpjs.com/)\n\n## Warning\n\nThe latest version of [gulp-iconfont](https://github.com/nfroidure/gulp-iconfont) emits a `codepoints` event (see https://github.com/nfroidure/gulp-iconfont/pull/4) which should likely be used instead of the workflow described below. However, it will continue to work as expected.\nThe future of this plugin will be discussed in https://github.com/backflip/gulp-iconfont-css/issues/9.\n\n## Usage\n\nFirst, install `gulp-iconfont-css` as a development dependency:\n\n```shell\nnpm install --save-dev gulp-iconfont-css\n```\n\nThen, add it to your `gulpfile.js`:\n\n```javascript\nvar iconfont = require('gulp-iconfont');\nvar iconfontCss = require('gulp-iconfont-css');\n\nvar fontName = 'Icons';\n\ngulp.task('iconfont', function(){\n  gulp.src(['app/assets/icons/*.svg'])\n    .pipe(iconfontCss({\n      fontName: fontName,\n      path: 'app/assets/css/templates/_icons.scss',\n      targetPath: '../../css/_icons.scss',\n      fontPath: '../../fonts/icons/'\n    }))\n    .pipe(iconfont({\n      fontName: fontName\n     }))\n    .pipe(gulp.dest('app/assets/fonts/icons/'));\n});\n```\n\n`gulp-iconfont-css` works well with `gulp-iconfont` but you can use it in a more modular fashion by directly using `gulp-svgicons2svgfont`, `gulp-svg2tff`, `gulp-ttf2eot` and/or `gulp-ttf2woff`.\n\n## API\n\n### iconfontCSS(options)\n\n#### options.fontName\nType: `String`\n\nThe name of the generated font family (required). **Important**: Has to be identical to iconfont's ```fontName``` option.\n\n#### options.path\nType: `String`\n\nThe template path (optional, defaults to `css` template provided with plugin).If set to `'scss'` or `'less'`, the corresponding default template will be used. See [templates](templates)\n\n#### options.targetPath\nType: `String`\n\nThe path where the (S)CSS file should be saved, relative to the path used in ```gulp.dest()``` (optional, defaults to ```_icons.css```).\n\n#### options.fontPath\nType: `String`\n\nDirectory of font files relative to generated (S)CSS file (optional, defaults to ```./```).\n\n#### options.engine\nType: `String`\n\nThe template engine to use (optional, defaults to ```lodash```). \nSee https://github.com/visionmedia/consolidate.js/ for available engines. The engine has to be installed before using.\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/backflip/gulp-iconfont-css/issues"
  },
  "homepage": "https://github.com/backflip/gulp-iconfont-css",
  "_id": "gulp-iconfont-css@0.0.9",
  "_from": "gulp-iconfont-css@0.0.9"
}
